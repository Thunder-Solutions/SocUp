/* the element surrounding the link - always applied */
.linkWrapper {
	/* The parent context determines the color scheme, not globally but externally. */
	/* This allows parents with backgrounds to ensure links have sufficient contrast. */
	--color-link-1: var(--color-accent-1);
	--color-link-1-1: var(--color-accent-1-1);
	--color-link-2: var(--color-accent-2);

	/* pretty much never a reason for a link not to be inline-block;
    it groups it at line breaks and makes it easier to style. */
	display: inline-block;
}

/* the element surrounding the link - only applied when inline=false */
.standalone {
	display: block;
	padding-top: 2rem;
}

/* the link itself - always applied */
/* local variables are not overridable externally, only by cascade */
.link {
	--color: var(--color-link-1);
}
.link:hover,
.link:active,
.link:visited {
	--color: var(--color-link-1-1);
}

/* the link itself - applied if no type was specified */
.default,
.default:hover,
.default:active,
.default:visited {
	color: var(--color);
	text-decoration: none;
	transition: color 0.5s;
}
.default:after {
	background-color: var(--color);
	content: '';
	display: block;
	height: 0.2rem;
	margin: 0 auto;
	width: 0;
	transition: width 0.5s;
}
.default:hover:after {
	width: 100%;
}

/* the link itself - applied if type=none */
/* useful for wrapping images or elements with nested text */
.none,
.none:hover,
.none:active,
.none:visited {
	color: inherit;
	text-decoration: none;
}

.none:hover:after {
	width: 0;
}
